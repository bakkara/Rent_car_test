{"version":3,"file":"static/js/288.f2b37f4a.chunk.js","mappings":"0KAEO,MAEMA,EAAkBC,GAASA,EAAMC,KAAKC,UAEtCC,EAAeH,GAASA,EAAMI,OAI9BC,GAAoBC,EAAAA,EAAAA,IAC/B,CATwBC,IAAA,IAAGN,MAAM,MAACO,IAAQD,EAAA,OAAKC,CAAK,EASvCL,IACb,CAACF,EAAMG,IACIH,EAAKG,QAAOK,GACnBA,EAAIC,KAAKC,cAAcC,SAASR,EAAOO,mB,4CCZtC,MAAME,EAAOC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oHAQhBC,EAAWJ,EAAAA,GAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,sH,QCR1B,MAAMI,EAAcP,EAAAA,GAAOQ,OAAMN,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wHAC7BV,IAAA,IAAC,OAAEgB,GAAQhB,EAAA,SAAAiB,OAAQD,EAAM,SAElBE,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOC,OAAO,IAGnCC,IAAA,IAAC,MAAEH,GAAOG,EAAA,OAAKH,EAAMC,OAAOG,KAAK,IAKtCC,EAAajB,EAAAA,GAAOkB,EAACZ,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,wIACvBgB,IAAA,IAAC,MAAEP,GAAOO,EAAA,OAAKP,EAAMC,OAAOO,KAAK,I,aCX5C,MAYA,EAZe3B,IAA+B,IAA9B,KAAE4B,EAAI,QAAEC,EAAO,MAAEC,GAAO9B,EACtC,OACI+B,EAAAA,EAAAA,KAACjB,EAAW,CACRkB,KAAK,SACTH,QAASA,EACTb,OAAQc,EAAMG,UAEdF,EAAAA,EAAAA,KAACP,EAAU,CAAAS,SAAEL,KACD,E,oBCTX,MAAMM,EAAa3B,EAAAA,GAAO4B,IAAG1B,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gEAMvB0B,EAAkB7B,EAAAA,GAAO4B,IAAGtB,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,0FAK5B2B,EAAe9B,EAAAA,GAAOkB,EAACa,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,iHAOvB6B,EAAchC,EAAAA,GAAOiC,KAAIC,IAAAA,GAAA/B,EAAAA,EAAAA,GAAA,6BAGzBgC,EAAiBnC,EAAAA,GAAO4B,IAAGQ,IAAAA,GAAAjC,EAAAA,EAAAA,GAAA,kFAM3BkC,EAAUrC,EAAAA,GAAOkB,EAACoB,IAAAA,GAAAnC,EAAAA,EAAAA,GAAA,+bAuBlBoC,EAAUvC,EAAAA,GAAO4B,IAAGY,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,4FAOpBsC,EAAMzC,EAAAA,GAAO0C,IAAGC,IAAAA,GAAAxC,EAAAA,EAAAA,GAAA,kG,qCCzDtB,MAAMyC,EAAe,CACpBC,QAAS,CACHC,SAAU,QACVC,IAAK,IACLC,KAAM,IACNzB,MAAO,QACP0B,OAAQ,QACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,gBAAiB,2BACjBC,OAAQ,QAEdC,QAAS,CACLR,IAAK,MACLC,KAAM,MACNQ,MAAO,OACPC,OAAQ,OACRC,UAAW,wBACXC,QAAS,IACTC,OAAQ,OACRC,SAAU,qBACVC,UAAW,qBACXC,SAAU,WAITC,EAAiBhE,EAAAA,GAAO4B,IAAG1B,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+JACzBV,IAAA,IAAC,MAAEmB,GAAOnB,EAAA,OAAKmB,EAAMqD,QAAQ,GAAG,IACvBtD,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOO,KAAK,IACpCL,IAAA,IAAC,MAAEH,GAAOG,EAAA,OAAKH,EAAMqD,QAAQ,EAAE,IACvC9C,IAAA,IAAC,MAAEP,GAAOO,EAAA,OAAKP,EAAMC,OAAOqD,KAAK,IAKjCC,EAAanE,EAAAA,GAAOQ,OAAMF,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,yLAIxBiE,IAAA,IAAC,MAAExD,GAAOwD,EAAA,OAAKxD,EAAMqD,QAAQ,IAAI,IACpBI,IAAA,IAAC,MAAEzD,GAAOyD,EAAA,OAAKzD,EAAM0D,UAAUC,WAAW,IAQzD9B,EAAMzC,EAAAA,GAAO0C,IAAGX,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,0HAIRqE,IAAA,IAAC,MAAE5D,GAAO4D,EAAA,OAAK5D,EAAMqD,QAAQ,EAAE,IAC/BQ,IAAA,IAAC,MAAE7D,GAAO6D,EAAA,OAAK7D,EAAMqD,QAAQ,EAAE,EAAE,ICHtD,EA9CuBxE,IAAsC,IAArC,OAAEiF,EAAM,IAAE/E,EAAG,eAAEgF,GAAgBlF,EAIrD,OACI+B,EAAAA,EAAAA,KAACoD,IAAK,CACFF,OAAQA,EACRC,eAAgBA,EAChBE,MAAOjC,EAAalB,UAGpBoD,EAAAA,EAAAA,MAACd,EAAc,CAAAtC,SAAA,EACXoD,EAAAA,EAAAA,MAACX,EAAU,CAAC7C,QAASqD,EAAejD,SAAA,CAAC,KAACF,EAAAA,EAAAA,KAACuD,EAAAA,IAAc,CAACC,KAAM,SAC5DxD,EAAAA,EAAAA,KAACiB,EAAG,CAACwC,IAAKtF,EAAI+C,OACdoC,EAAAA,EAAAA,MAAChD,EAAY,CAAAJ,SAAA,CAAE/B,EAAIC,KAAK,KAACkF,EAAAA,EAAAA,MAAC9C,EAAW,CAAAN,SAAA,CAAE/B,EAAIuF,MAAM,OAAe,IAAEvF,EAAIwF,KAAK,QAC3EL,EAAAA,EAAAA,MAAC3C,EAAc,CAAAT,SAAA,EACbF,EAAAA,EAAAA,KAACa,EAAO,CAAAX,SAAE/B,EAAIyF,QAAQC,MAAM,KAAK,MACjC7D,EAAAA,EAAAA,KAACa,EAAO,CAAAX,SAAE/B,EAAIyF,QAAQC,MAAM,KAAK,MACjCP,EAAAA,EAAAA,MAACzC,EAAO,CAAAX,SAAA,CAAC,OAAK/B,EAAI2F,OAClBR,EAAAA,EAAAA,MAACzC,EAAO,CAAAX,SAAA,CAAC,SAAO/B,EAAIwF,SACpBL,EAAAA,EAAAA,MAACzC,EAAO,CAAAX,SAAA,CAAC,SAAO/B,EAAI8B,SACpBqD,EAAAA,EAAAA,MAACzC,EAAO,CAAAX,SAAA,CAAC,qBAAmB/B,EAAI4F,oBAChCT,EAAAA,EAAAA,MAACzC,EAAO,CAAAX,SAAA,CAAC,gBAAc/B,EAAI6F,kBAG7BhE,EAAAA,EAAAA,KAAA,KAAAE,SAAI/B,EAAI8F,eACRjE,EAAAA,EAAAA,KAAA,KAAAE,SAAG,uCACHoD,EAAAA,EAAAA,MAAC3C,EAAc,CAAAT,SAAA,EACbF,EAAAA,EAAAA,KAACa,EAAO,CAAAX,SAAE/B,EAAI+F,YAAY,MAC1BlE,EAAAA,EAAAA,KAACa,EAAO,CAAAX,SAAE/B,EAAI+F,YAAY,MACxBlE,EAAAA,EAAAA,KAACa,EAAO,CAAAX,SAAE/B,EAAI+F,YAAY,MAC1BlE,EAAAA,EAAAA,KAACa,EAAO,CAAAX,SAAE/B,EAAIgG,gBAAgB,MAChCnE,EAAAA,EAAAA,KAACa,EAAO,CAAAX,SAAE/B,EAAIgG,gBAAgB,MAC/BnE,EAAAA,EAAAA,KAACa,EAAO,CAAAX,SAAE/B,EAAIgG,gBAAgB,SAG/BnE,EAAAA,EAAAA,KAAA,KAAAE,SAAG,yBAETF,EAAAA,EAAAA,KAACoE,EAAM,CAACvE,KAAM,aAAcC,QArCRuE,KACpBC,OAAOC,SAASC,KAAO,mBAAmB,EAoCQzE,MAAO,UAIrD,EC5CC0E,EAAUxG,IAAY,IAAX,IAACE,GAAIF,EAE7B,MAAOiF,EAAQwB,IAAaC,EAAAA,EAAAA,WAAS,GAWjC,OACIrB,EAAAA,EAAAA,MAACnD,EAAU,CAAAD,SAAA,EACPF,EAAAA,EAAAA,KAACe,EAAO,CAAAb,UACRF,EAAAA,EAAAA,KAACiB,EAAG,CAACwC,IAAKtF,EAAI+C,SAElBoC,EAAAA,EAAAA,MAACjD,EAAe,CAAAH,SAAA,EAERoD,EAAAA,EAAAA,MAAChD,EAAY,CAAAJ,SAAA,CAAE/B,EAAIC,KAAK,KAACkF,EAAAA,EAAAA,MAAC9C,EAAW,CAAAN,SAAA,CAAE/B,EAAIuF,MAAM,OAAe,IAAEvF,EAAIwF,KAAK,QAC3E3D,EAAAA,EAAAA,KAACM,EAAY,CAAAJ,SAAE/B,EAAIyG,kBAGvBtB,EAAAA,EAAAA,MAAC3C,EAAc,CAAAT,SAAA,EACXF,EAAAA,EAAAA,KAACa,EAAO,CAAAX,SAAE/B,EAAIyF,QAAQC,MAAM,KAAK,MACjC7D,EAAAA,EAAAA,KAACa,EAAO,CAAAX,SAAE/B,EAAIyF,QAAQC,MAAM,KAAK,MACjC7D,EAAAA,EAAAA,KAACa,EAAO,CAAAX,SAAE/B,EAAI0G,iBACd7E,EAAAA,EAAAA,KAACa,EAAO,CAAAX,SAAE/B,EAAI8B,QACdD,EAAAA,EAAAA,KAACa,EAAO,CAAAX,SAAE/B,EAAIuF,SACd1D,EAAAA,EAAAA,KAACa,EAAO,CAAAX,SAAE/B,EAAI2G,WACd9E,EAAAA,EAAAA,KAACa,EAAO,CAAAX,SAAE/B,EAAI+F,YAAY,SAE9BlE,EAAAA,EAAAA,KAACoE,EAAM,CAACvE,KAAM,aAAcC,QAzBhBuE,KAChBK,GAAU,EAAK,EAwBuC3E,MAAO,MACxDmD,IACHlD,EAAAA,EAAAA,KAAC+E,EAAc,CACb7B,OAAUA,EACV/E,IAAKA,EACLgF,eAlCe6B,KACvBN,GAAU,EAAM,MAoCC,E,MC5Cd,MAAMO,EAAQzG,EAAAA,GAAO0G,MAAKxG,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wH,aCG1B,MAAMwG,GAASA,KAElB,MAAMrH,GAASsH,EAAAA,EAAAA,IAAYvH,GACrBwH,GAAWC,EAAAA,EAAAA,MAEjB,OACItF,EAAAA,EAAAA,KAAA,OAAAE,UACIoD,EAAAA,EAAAA,MAAA,SAAOiC,QAAQ,SAAQrF,SAAA,CAAC,aACpBF,EAAAA,EAAAA,KAACiF,EAAK,CACFO,KAAK,SACLvF,KAAK,OACLwF,MAAO3H,EACP4H,SAAUC,GAAON,GAASO,EAAAA,EAAAA,GAAUD,EAAIE,OAAOJ,QAC/CK,YAAY,uBAGlB,ECZDC,GAAUA,KACrB,MACQC,GADKZ,EAAAA,EAAAA,IAAYrH,GACKkI,MAAK,CAACC,EAAGC,IAAMD,EAAE9H,KAAKgI,cAAcD,EAAEX,QAEpE,OAEIlC,EAAAA,EAAAA,MAAA+C,EAAAA,SAAA,CAAAnG,SAAA,EACFF,EAAAA,EAAAA,KAACmF,GAAM,KACNnF,EAAAA,EAAAA,KAACzB,EAAI,CAAA2B,SACD8F,EAAeM,KAAIC,IAChBvG,EAAAA,EAAAA,KAACpB,EAAQ,CAAAsB,UACTF,EAAAA,EAAAA,KAACyE,EAAO,CAACtG,IAAKoI,KADCA,EAAKzC,UAKvB,ECFT,GAfgB0C,KACZ,MAAMnB,GAAWC,EAAAA,EAAAA,MACb1H,GAAYwH,EAAAA,EAAAA,IAAY3H,GAK5B,OAHFgJ,EAAAA,EAAAA,YAAU,KACRpB,GAASqB,EAAAA,EAAAA,KAAY,GACpB,CAACrB,KAEA/B,EAAAA,EAAAA,MAAA+C,EAAAA,SAAA,CAAAnG,SAAA,EACMF,EAAAA,EAAAA,KAAA,OAAAE,SAAMtC,IAAaoC,EAAAA,EAAAA,KAAC2G,EAAAA,EAAM,OAC1B3G,EAAAA,EAAAA,KAAC+F,GAAO,MACT,C","sources":["redux/selectors.js","components/CarList/CarList.styled.js","components/Button/Button.styled.js","components/Button/Button.js","components/CarItem/CarItem.styled.js","components/ModalDetailInf/ModalDetailInf.styled.js","components/ModalDetailInf/ModalDetailInf.js","components/CarItem/CarItem.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/CarList/CarList.js","pages/Catalog.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectCars = ({ cars: {items} }) => items;\n\nexport const selectIsLoading = state => state.cars.isLoading;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectError = state => state.cars.error;\n\nexport const selectVisibleCars = createSelector(\n  [selectCars, selectFilter],\n  (cars, filter) => {\n      return cars.filter(car =>\n      car.make.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\nexport const selectFavorites = state => state.favorites;","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 50px 29px;\n  margin: 0 auto;\n\n`\nexport const ListItem = styled.li`\n  display: flex;\n  width: 274px;\n  height: 426px;\n  flex-direction: column;\n  align-items: flex-start;\n`;","import styled from 'styled-components';\n\nexport const ButtonStyle = styled.button`\n  width: ${({ $width }) => `${$width}px`};\n  border-radius: 12px;\n    background: ${({ theme }) => theme.colors.primary};    \n\n   &:hover {\n    background: ${({ theme }) => theme.colors.hover};\n  }\n  `;\n\n\nexport const TextButton = styled.p`\n  color: ${({ theme }) => theme.colors.white};\n  font-family: Manrope;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.43;\n`;","import React from 'react'\nimport { TextButton, ButtonStyle } from './Button.styled'\n\nconst Button = ({ text, onClick, width }) => {\n  return (\n      <ButtonStyle\n          type=\"button\"\n      onClick={onClick}\n      $width={width}\n    >\n      <TextButton>{text}</TextButton>\n    </ButtonStyle>\n  )\n}\n\nexport default Button\n","import styled from 'styled-components';\n\nexport const CarWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;`\n  \n  \nexport const TitleCarWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 8px;`\n\nexport const TitleTextCar = styled.p`\n    color: #121417;\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1.5;\n    margin: 0;`\n    \nexport const TextCarSpan = styled.span`\n    color: #3470FF;`\n\nexport const TextCarWrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    margin-bottom: 28px;\n    `\n\nexport const TextCar = styled.p`\n    color: rgba(18, 20, 23, 0.50);\n    font-family: Manrope;\n    font-size: 12px;\n    font-weight: 400;\n    line-height: 1.5;\n    margin: 0;\n    white-space: nowrap;\n    \n    &::after {\n        content: '';\n        width: 0px;\n        height: 16px;\n        border-left: 1px solid rgba(18, 20, 23, 0.10);\n        margin-left: 6px;\n        margin-right: 6px;\n    }\n\n    &:last-child::after {\n        content: none;\n    }`\n\n\nexport const ImgWrap = styled.div`\n  position: relative;\n  width: 274px;\n  height: 268px;\n  margin-bottom: 14px;\n`;\n\nexport const Img = styled.img`\n    width: 100%;\n    height: 268px;\n    object-fit: cover;\n    border-radius: 14px;\n`","import styled from 'styled-components';\n\nexport const customStyles = {\n        overlay: {\n              position: 'fixed',\n              top: '0',\n              left: '0',\n              width: '100vw',\n              height: '100vh',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              backgroundColor: 'rgba(229, 227, 234, 0.8)',\n              zIndex: '1200',        \n},\n        content: {\n            top: '50%', \n            left: '50%', \n            right: 'auto',\n            bottom: 'auto',\n            transform: 'translate(-50%, -50%)', \n            padding: '0', \n            border: 'none', \n            maxWidth: 'calc(100vw - 48px)',\n            maxHeight: 'calc(100vh - 24px)',\n            overflow: 'hidden',\n        },\n};\n\nexport const ModalContainer = styled.div`\n    padding: ${({ theme }) => theme.spacing(10)};\n    background-color: ${({ theme }) => theme.colors.white};\n    border-radius: ${({ theme }) => theme.spacing(6)};\n    color: ${({ theme }) => theme.colors.black};\n    position: relative;\n    width: 100%;\n    height: 100%;`\n\nexport const ExitButton = styled.button`\n    position: absolute;\n    top: 0;\n    right: 0;\n    padding: ${({ theme }) => theme.spacing(2.5)};\n    transition: transform ${({ theme }) => theme.animation.cubicBezier};\n\n    &:hover,\n    &:focus {\n        transform: scale(1.05);\n    }\n`;\n\nexport const Img = styled.img`\n    width: 100%;\n    height: 268px;\n    object-fit: cover;\n    border-radius: ${({ theme }) => theme.spacing(6)};\n    margin-bottom: ${({ theme }) => theme.spacing(3,5)};\n`","import React from 'react'\nimport Modal from 'react-modal'\nimport { IoCloseOutline } from \"react-icons/io5\";\nimport { ExitButton, Img, ModalContainer, customStyles } from './ModalDetailInf.styled'\nimport { TextCar, TextCarSpan, TextCarWrapper, TitleTextCar } from '../CarItem/CarItem.styled';\nimport Button from '../Button/Button';\n\nconst ModalDetailInf = ({ isOpen, car, onRequestClose }) => {\n        const handleClick = () => {\n        window.location.href = 'tel:+380730000000';\n    }\n  return (\n      <Modal\n          isOpen={isOpen}\n          onRequestClose={onRequestClose}\n          style={customStyles}\n      >\n          \n          <ModalContainer>\n              <ExitButton onClick={onRequestClose}> <IoCloseOutline size={24} /></ExitButton>\n              <Img src={car.img} />\n              <TitleTextCar>{car.make} <TextCarSpan>{car.model},</TextCarSpan> {car.year} </TitleTextCar>\n              <TextCarWrapper>\n                <TextCar>{car.address.split(',')[1]}</TextCar>\n                <TextCar>{car.address.split(',')[2]}</TextCar>\n                <TextCar>Id: {car.id}</TextCar>\n                <TextCar>Year: {car.year}</TextCar>\n                <TextCar>Type: {car.type}</TextCar>\n                <TextCar>Fuel Consumption: {car.fuelConsumption}</TextCar>\n                <TextCar>Engine Size: {car.engineSize}</TextCar>\n              </TextCarWrapper>\n\n              <p>{car.description}</p>\n              <p>Accessories and functionalities: </p>\n              <TextCarWrapper>\n                <TextCar>{car.accessories[0]}</TextCar>\n                <TextCar>{car.accessories[1]}</TextCar>\n                  <TextCar>{car.accessories[2]}</TextCar>\n                  <TextCar>{car.functionalities[0]}</TextCar>\n                <TextCar>{car.functionalities[1]}</TextCar>\n               <TextCar>{car.functionalities[2]}</TextCar>\n\n              </TextCarWrapper>\n              <p>Rental Conditions: </p>\n              \n        <Button text={\"Rental car\"} onClick={handleClick} width={168}/>\n          \n          \n          </ModalContainer>\n    </Modal>\n  )\n}\n\nexport default ModalDetailInf\n","import { useState } from \"react\";\nimport Button from \"../Button/Button\"\nimport { CarWrapper, Img, ImgWrap, TextCar, TextCarSpan, TextCarWrapper, TitleCarWrapper, TitleTextCar} from \"./CarItem.styled\"\nimport ModalDetailInf from \"../ModalDetailInf/ModalDetailInf\";\n\nexport const CarItem = ({car}) => {\n \nconst [isOpen, setIsOpen] = useState(false);\n\n  const handleModalClose = () => {\n    setIsOpen(false);\n        };\n    \n    const handleClick = () => {\n        setIsOpen(true)\n    }\n\n    \n    return (\n        <CarWrapper>\n            <ImgWrap>\n            <Img src={car.img} />\n        </ImgWrap>\n        <TitleCarWrapper>\n                \n                <TitleTextCar>{car.make} <TextCarSpan>{car.model},</TextCarSpan> {car.year} </TitleTextCar>\n                <TitleTextCar>{car.rentalPrice}</TitleTextCar>\n\n        </TitleCarWrapper>\n            <TextCarWrapper>\n                <TextCar>{car.address.split(',')[1]}</TextCar>\n                <TextCar>{car.address.split(',')[2]}</TextCar>\n                <TextCar>{car.rentalCompany}</TextCar>\n                <TextCar>{car.type}</TextCar>\n                <TextCar>{car.model}</TextCar>\n                <TextCar>{car.mileage}</TextCar>\n                <TextCar>{car.accessories[0]}</TextCar>\n            </TextCarWrapper>\n            <Button text={\"Learn more\"} onClick={handleClick} width={274} />\n            {isOpen && (\n          <ModalDetailInf\n            isOpen = {isOpen}\n            car={car}\n            onRequestClose={handleModalClose}\n        />\n      )}\n        </CarWrapper>\n    )\n}","import styled from 'styled-components';\n\nexport const Input = styled.input`\n    display: block;\n    margin-top: 8px;\n    \n    &:focus-visible{\n        outline: 1px solid blue;\n    }`","import { Input } from \"./Filter.styled\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from \"../../redux/selectors\";\nimport { setFilter } from \"../../redux/filterSlice\";\n\nexport const Filter = () => {\n  \n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            <label htmlFor=\"filter\">Car brand\n                <Input\n                    name=\"filter\"\n                    type=\"text\"\n                    value={filter}\n                    onChange={evt => dispatch(setFilter(evt.target.value))}\n                    placeholder=\"Search contact\"\n                />\n            </label>\n        </div>\n    );\n}","\nimport { List, ListItem } from \"./CarList.styled\"\nimport {useSelector } from 'react-redux';\n\nimport { CarItem } from \"../CarItem/CarItem\";\nimport { selectVisibleCars } from \"../../redux/selectors\";\nimport { Filter } from \"../Filter/Filter\";\n\n\nexport const CarList = () => {\n  const cars = useSelector(selectVisibleCars);\n    const sortedContacts = cars.sort((a, b) => a.make.localeCompare(b.name));\n  \n  return (\n\n      <>\n    <Filter />\n     <List>\n        {sortedContacts.map(item => (\n            <ListItem key={item.id}>\n            <CarItem car={item}/>\n            </ListItem>\n      ))}\n          </List>\n      </>\n\n )\n}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from '../redux/selectors';\nimport { fetchCars } from '../redux/operations';\nimport { Loader } from '../components/Loader/Loader';\nimport { CarList } from '../components/CarList/CarList';\n\nconst Catalog = () => {\n    const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchCars());\n  }, [dispatch]);\n    return (\n      <>\n            <div>{isLoading && <Loader />}</div>\n            <CarList/>\n        </>\n  )\n}\n\nexport default Catalog\n"],"names":["selectIsLoading","state","cars","isLoading","selectFilter","filter","selectVisibleCars","createSelector","_ref","items","car","make","toLowerCase","includes","List","styled","ul","_templateObject","_taggedTemplateLiteral","ListItem","li","_templateObject2","ButtonStyle","button","$width","concat","_ref2","theme","colors","primary","_ref3","hover","TextButton","p","_ref4","white","text","onClick","width","_jsx","type","children","CarWrapper","div","TitleCarWrapper","TitleTextCar","_templateObject3","TextCarSpan","span","_templateObject4","TextCarWrapper","_templateObject5","TextCar","_templateObject6","ImgWrap","_templateObject7","Img","img","_templateObject8","customStyles","overlay","position","top","left","height","display","justifyContent","alignItems","backgroundColor","zIndex","content","right","bottom","transform","padding","border","maxWidth","maxHeight","overflow","ModalContainer","spacing","black","ExitButton","_ref5","_ref6","animation","cubicBezier","_ref7","_ref8","isOpen","onRequestClose","Modal","style","_jsxs","IoCloseOutline","size","src","model","year","address","split","id","fuelConsumption","engineSize","description","accessories","functionalities","Button","handleClick","window","location","href","CarItem","setIsOpen","useState","rentalPrice","rentalCompany","mileage","ModalDetailInf","handleModalClose","Input","input","Filter","useSelector","dispatch","useDispatch","htmlFor","name","value","onChange","evt","setFilter","target","placeholder","CarList","sortedContacts","sort","a","b","localeCompare","_Fragment","map","item","Catalog","useEffect","fetchCars","Loader"],"sourceRoot":""}