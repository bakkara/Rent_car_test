{"version":3,"file":"static/js/347.45310213.chunk.js","mappings":"yKAEO,MAEMA,EAAkBC,GAASA,EAAMC,KAAKC,UAEtCC,EAAeH,GAASA,EAAMI,OAI9BC,GAAoBC,EAAAA,EAAAA,IAC/B,CATwBC,IAAA,IAAGN,MAAM,MAACO,IAAQD,EAAA,OAAKC,CAAK,EASvCL,IACb,CAACF,EAAMG,IACIH,EAAKG,QAAOK,GACnBA,EAAIC,KAAKC,cAAcC,SAASR,EAAOO,mB,0CCZtC,MAAME,EAAYC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yN,aCE5B,MAAMC,EAASA,KAEdC,EAAAA,EAAAA,KAACN,EAAS,CAAAO,UACVD,EAAAA,EAAAA,KAACE,EAAAA,GAAS,CACNC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,M,QCbd,MAAMC,EAAOhB,EAAAA,GAAOiB,GAAEf,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,YAGhBe,EAAWlB,EAAAA,GAAOmB,GAAEC,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,2G,QCH1B,MAAMkB,EAAarB,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oEAQvBmB,EAAUtB,EAAAA,GAAOC,IAAGmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,6FCNpBoB,EAAU9B,IAEhB,IADHE,KAAK,KAAEC,IACVH,EAaG,OACEY,EAAAA,EAAAA,KAACgB,EAAU,CAAAf,UACTD,EAAAA,EAAAA,KAACiB,EAAO,CAAAhB,UACNkB,EAAAA,EAAAA,MAAA,KAAAlB,SAAA,CAAIV,EAAK,WAIE,E,MCxBd,MAAM6B,EAAQzB,EAAAA,GAAO0B,MAAKxB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wH,aCG1B,MAAMwB,EAASA,KAElB,MAAMrC,GAASsC,EAAAA,EAAAA,IAAYvC,GACrBwC,GAAWC,EAAAA,EAAAA,MAEjB,OACIzB,EAAAA,EAAAA,KAAA,OAAAC,UACIkB,EAAAA,EAAAA,MAAA,SAAOO,QAAQ,SAAQzB,SAAA,CAAC,yBACpBD,EAAAA,EAAAA,KAACoB,EAAK,CACFO,KAAK,SACLC,KAAK,OACLC,MAAO5C,EACP6C,SAAUC,GAAOP,GAASQ,EAAAA,EAAAA,GAAUD,EAAIE,OAAOJ,QAC/CK,YAAY,uBAGlB,ECZDC,EAAUA,KACrB,MACQC,GADKb,EAAAA,EAAAA,IAAYrC,GACKmD,MAAK,CAACC,EAAGC,IAAMD,EAAE/C,KAAKiD,cAAcD,EAAEZ,QAEpE,OAEIR,EAAAA,EAAAA,MAAAsB,EAAAA,SAAA,CAAAxC,SAAA,EACFD,EAAAA,EAAAA,KAACsB,EAAM,KACNtB,EAAAA,EAAAA,KAACW,EAAI,CAAAV,SACDmC,EAAeM,KAAIC,IAChB3C,EAAAA,EAAAA,KAACa,EAAQ,CAAAZ,UACTD,EAAAA,EAAAA,KAACkB,EAAO,CAAC5B,IAAKqD,KADCA,EAAKC,UAKvB,ECFT,EAfgBC,KACZ,MAAMrB,GAAWC,EAAAA,EAAAA,MACb1C,GAAYwC,EAAAA,EAAAA,IAAY3C,GAK5B,OAHFkE,EAAAA,EAAAA,YAAU,KACRtB,GAASuB,EAAAA,EAAAA,KAAY,GACpB,CAACvB,KAEAL,EAAAA,EAAAA,MAAAsB,EAAAA,SAAA,CAAAxC,SAAA,EACMD,EAAAA,EAAAA,KAAA,OAAAC,SAAMlB,IAAaiB,EAAAA,EAAAA,KAACD,EAAM,OAC1BC,EAAAA,EAAAA,KAACmC,EAAO,MACT,C","sources":["redux/selectors.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","components/CarList/CarList.styled.js","components/CarItem/CarItem.styled.js","components/CarItem/CarItem.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/CarList/CarList.js","pages/Catalog.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectCars = ({ cars: {items} }) => items;\n\nexport const selectIsLoading = state => state.cars.isLoading;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectError = state => state.cars.error;\n\nexport const selectVisibleCars = createSelector(\n  [selectCars, selectFilter],\n  (cars, filter) => {\n      return cars.filter(car =>\n      car.make.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\nexport const selectFavorites = state => state.favorites;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`","import { ThreeDots  } from 'react-loader-spinner'\nimport { Container } from './Loader.styled'\n\n\nexport const Loader = () => {\n    return (\n        <Container>\n        <ThreeDots \n            height=\"80\" \n            width=\"80\" \n            radius=\"9\"\n            color=\"#02646d\" \n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClassName=\"\"\n            visible={true}\n        />\n        </Container>\n    )\n}","import styled from 'styled-components';\n\nexport const List = styled.ul`\n\n`\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;","import styled from 'styled-components';\n\nexport const CarWrapper = styled.div`\n\n\n  position: relative;\n  width: 100%;\n  height: 100%;`\n  \n  \nexport const TextCar = styled.div`\n    color: #4e4e4e;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;`","import { CarWrapper, TextCar} from \"./CarItem.styled\"\n// import { useDispatch } from 'react-redux';\n// import { useState } from \"react\";\n\nexport const CarItem = ({\n    car: { make },\n}) => {\n//   const dispatch = useDispatch();\n  \n//   const [isEditing, setIsEditing] = useState(false);\n\n//   const handleEditClick = () => {\n//     setIsEditing(true);\n//   };\n\n//   const handleEditModalClose = () => {\n//     setIsEditing(false);\n//     };\n    \n    return (\n      <CarWrapper>\n        <TextCar>\n          <p>{make}: </p>\n\n        </TextCar>\n        \n        </CarWrapper>\n    )\n}","import styled from 'styled-components';\n\nexport const Input = styled.input`\n    display: block;\n    margin-top: 8px;\n    \n    &:focus-visible{\n        outline: 1px solid blue;\n    }`","import { Input } from \"./Filter.styled\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from \"../../redux/selectors\";\nimport { setFilter } from \"../../redux/filterSlice\";\n\nexport const Filter = () => {\n  \n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            <label htmlFor=\"filter\">Find contacts by name\n                <Input\n                    name=\"filter\"\n                    type=\"text\"\n                    value={filter}\n                    onChange={evt => dispatch(setFilter(evt.target.value))}\n                    placeholder=\"Search contact\"\n                />\n            </label>\n        </div>\n    );\n}","\nimport { List, ListItem } from \"./CarList.styled\"\nimport {useSelector } from 'react-redux';\n\nimport { CarItem } from \"../CarItem/CarItem\";\nimport { selectVisibleCars } from \"../../redux/selectors\";\nimport { Filter } from \"../Filter/Filter\";\n\n\nexport const CarList = () => {\n  const cars = useSelector(selectVisibleCars);\n    const sortedContacts = cars.sort((a, b) => a.make.localeCompare(b.name));\n  \n  return (\n\n      <>\n    <Filter />\n     <List>\n        {sortedContacts.map(item => (\n            <ListItem key={item.id}>\n            <CarItem car={item}/>\n            </ListItem>\n      ))}\n          </List>\n      </>\n\n )\n}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from '../redux/selectors';\nimport { fetchCars } from '../redux/operations';\nimport { Loader } from '../components/Loader/Loader';\nimport { CarList } from '../components/CarList/CarList';\n\nconst Catalog = () => {\n    const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchCars());\n  }, [dispatch]);\n    return (\n      <>\n            <div>{isLoading && <Loader />}</div>\n            <CarList/>\n        </>\n  )\n}\n\nexport default Catalog\n"],"names":["selectIsLoading","state","cars","isLoading","selectFilter","filter","selectVisibleCars","createSelector","_ref","items","car","make","toLowerCase","includes","Container","styled","div","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","ThreeDots","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","List","ul","ListItem","li","_templateObject2","CarWrapper","TextCar","CarItem","_jsxs","Input","input","Filter","useSelector","dispatch","useDispatch","htmlFor","name","type","value","onChange","evt","setFilter","target","placeholder","CarList","sortedContacts","sort","a","b","localeCompare","_Fragment","map","item","id","Catalog","useEffect","fetchCars"],"sourceRoot":""}