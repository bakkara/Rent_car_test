{"version":3,"file":"static/js/316.799513b7.chunk.js","mappings":"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","sources":["redux/selectors.js","components/CarList/CarList.styled.js","components/Button/Button.styled.js","components/Button/Button.js","components/CarItem/CarItem.styled.js","components/CarItem/CarItem.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/CarList/CarList.js","pages/Catalog.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectCars = ({ cars: {items} }) => items;\n\nexport const selectIsLoading = state => state.cars.isLoading;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectError = state => state.cars.error;\n\nexport const selectVisibleCars = createSelector(\n  [selectCars, selectFilter],\n  (cars, filter) => {\n      return cars.filter(car =>\n      car.make.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\nexport const selectFavorites = state => state.favorites;","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 50px 29px;\n  margin: 0 auto;\n\n`\nexport const ListItem = styled.li`\n  display: flex;\n  width: 274px;\n  height: 426px;\n  flex-direction: column;\n  align-items: flex-start;\n`;","import styled from 'styled-components';\n\nexport const ButtonStyle = styled.button`\n  width: ${({ $width }) => `${$width}px`};\n  border-radius: 12px;\n    background: #3470FF;    \n\n   &:hover {\n    backgroundColor: '#0B44CD',\n  }\n  `;\n\n\nexport const TextButton = styled.p`\n  color: #fff;\n  font-family: Manrope;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.43;\n`;","import React from 'react'\nimport { TextButton, ButtonStyle } from './Button.styled'\n\nconst Button = ({ text, onClick, width }) => {\n  return (\n      <ButtonStyle\n          type=\"button\"\n      onClick={onClick}\n      $width={width}\n    >\n      <TextButton>{text}</TextButton>\n    </ButtonStyle>\n  )\n}\n\nexport default Button\n","import styled from 'styled-components';\n\nexport const CarWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;`\n  \n  \nexport const TitleCarWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 8px;`\n\nexport const TitleTextCar = styled.p`\n    color: #121417;\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1.5;\n    margin: 0;`\n    \nexport const TextCarSpan = styled.span`\n    color: #3470FF;`\n\nexport const TextCarWrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    margin-bottom: 28px;\n    `\n\nexport const TextCar = styled.p`\n    color: rgba(18, 20, 23, 0.50);\n    font-family: Manrope;\n    font-size: 12px;\n    font-weight: 400;\n    line-height: 1.5;\n    margin: 0;\n    white-space: nowrap;\n    \n    &::after {\n        content: '';\n        width: 0px;\n        height: 16px;\n        border-left: 1px solid rgba(18, 20, 23, 0.10);\n        margin-left: 6px;\n        margin-right: 6px;\n    }\n\n    &:last-child::after {\n        content: none;\n    }`\n\n\nexport const ImgWrap = styled.div`\n  position: relative;\n  width: 274px;\n  height: 268px;\n  margin-bottom: 14px;\n`;\n\nexport const Img = styled.img`\n    width: 100%;\n    height: 268px;\n    object-fit: cover;\n    border-radius: 14px;\n`","import Button from \"../Button/Button\"\nimport { CarWrapper, Img, ImgWrap, TextCar, TextCarSpan, TextCarWrapper, TitleCarWrapper, TitleTextCar} from \"./CarItem.styled\"\n// import { useDispatch } from 'react-redux';\n// import { useState } from \"react\";\n\nexport const CarItem = ({car}) => {\n//   const dispatch = useDispatch();\n  \n//   const [isEditing, setIsEditing] = useState(false);\n\n//   const handleEditClick = () => {\n//     setIsEditing(true);\n//   };\n\n//   const handleEditModalClose = () => {\n//     setIsEditing(false);\n    //     };\n    \n    const handleClick = () => {\n        console.log('Hello')\n    }\n\n    \n    return (\n        <CarWrapper>\n            <ImgWrap>\n            <Img src={car.img} />\n        </ImgWrap>\n        <TitleCarWrapper>\n                \n                <TitleTextCar>{car.make} <TextCarSpan>{car.model},</TextCarSpan> {car.year} </TitleTextCar>\n                <TitleTextCar>{car.rentalPrice}</TitleTextCar>\n\n        </TitleCarWrapper>\n            <TextCarWrapper>\n                <TextCar>{car.address.split(',')[1]}</TextCar>\n                <TextCar>{car.address.split(',')[2]}</TextCar>\n                <TextCar>{car.rentalCompany}</TextCar>\n                <TextCar>{car.type}</TextCar>\n                <TextCar>{car.model}</TextCar>\n                <TextCar>{car.mileage}</TextCar>\n                <TextCar>{car.accessories[0]}</TextCar>\n            </TextCarWrapper>\n            <Button text={\"Learn more\"} onClick={handleClick} width={274} />\n        </CarWrapper>\n    )\n}","import styled from 'styled-components';\n\nexport const Input = styled.input`\n    display: block;\n    margin-top: 8px;\n    \n    &:focus-visible{\n        outline: 1px solid blue;\n    }`","import { Input } from \"./Filter.styled\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from \"../../redux/selectors\";\nimport { setFilter } from \"../../redux/filterSlice\";\n\nexport const Filter = () => {\n  \n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            <label htmlFor=\"filter\">Car brand\n                <Input\n                    name=\"filter\"\n                    type=\"text\"\n                    value={filter}\n                    onChange={evt => dispatch(setFilter(evt.target.value))}\n                    placeholder=\"Search contact\"\n                />\n            </label>\n        </div>\n    );\n}","\nimport { List, ListItem } from \"./CarList.styled\"\nimport {useSelector } from 'react-redux';\n\nimport { CarItem } from \"../CarItem/CarItem\";\nimport { selectVisibleCars } from \"../../redux/selectors\";\nimport { Filter } from \"../Filter/Filter\";\n\n\nexport const CarList = () => {\n  const cars = useSelector(selectVisibleCars);\n    const sortedContacts = cars.sort((a, b) => a.make.localeCompare(b.name));\n  \n  return (\n\n      <>\n    <Filter />\n     <List>\n        {sortedContacts.map(item => (\n            <ListItem key={item.id}>\n            <CarItem car={item}/>\n            </ListItem>\n      ))}\n          </List>\n      </>\n\n )\n}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from '../redux/selectors';\nimport { fetchCars } from '../redux/operations';\nimport { Loader } from '../components/Loader/Loader';\nimport { CarList } from '../components/CarList/CarList';\n\nconst Catalog = () => {\n    const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchCars());\n  }, [dispatch]);\n    return (\n      <>\n            <div>{isLoading && <Loader />}</div>\n            <CarList/>\n        </>\n  )\n}\n\nexport default Catalog\n"],"names":["selectIsLoading","state","cars","isLoading","selectFilter","filter","selectVisibleCars","createSelector","_ref","items","car","make","toLowerCase","includes","List","styled","ul","_templateObject","_taggedTemplateLiteral","ListItem","li","_templateObject2","ButtonStyle","button","$width","concat","TextButton","p","text","onClick","width","_jsx","type","children","CarWrapper","div","TitleCarWrapper","TitleTextCar","_templateObject3","TextCarSpan","span","_templateObject4","TextCarWrapper","_templateObject5","TextCar","_templateObject6","ImgWrap","_templateObject7","Img","img","_templateObject8","CarItem","_jsxs","src","model","year","rentalPrice","address","split","rentalCompany","mileage","accessories","Button","handleClick","console","log","Input","input","Filter","useSelector","dispatch","useDispatch","htmlFor","name","value","onChange","evt","setFilter","target","placeholder","CarList","sortedContacts","sort","a","b","localeCompare","_Fragment","map","item","id","Catalog","useEffect","fetchCars","Loader"],"sourceRoot":""}